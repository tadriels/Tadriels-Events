import React, { useState, useEffect } from 'react';
import { ChevronLeft, ChevronRight, X, MessageCircle, Quote } from 'lucide-react';

// Main App component that acts as the single-page application router
function App() {
  const [currentPage, setCurrentPage] = useState('home');
  const [isChatOpen, setIsChatOpen] = useState(false);
  const [isQuoteModalOpen, setIsQuoteModalOpen] = useState(false);

  // Function to render the correct page component based on state
  const renderPage = () => {
    switch (currentPage) {
      case 'home':
        return <Home />;
      case 'about':
        return <AboutUs />;
      case 'services':
        return <Services />;
      case 'gallery':
        return <Gallery />;
      case 'contact':
        return <ContactUs />;
      default:
        return <Home />;
    }
  };

  return (
    <div className="font-sans antialiased text-gray-800 bg-white min-h-screen flex flex-col">
      {/* Header and Navigation Bar */}
      <header className="fixed top-0 left-0 w-full z-50 bg-white bg-opacity-90 shadow-md">
        <div className="container mx-auto px-4 py-3 flex justify-between items-center">
          <h1 className="text-2xl font-bold text-indigo-700">Tadriels Event Planning</h1>
          <nav className="hidden md:flex space-x-6">
            <NavItem page="home" currentPage={currentPage} setCurrentPage={setCurrentPage}>Home</NavItem>
            <NavItem page="about" currentPage={currentPage} setCurrentPage={setCurrentPage}>About Us</NavItem>
            <NavItem page="services" currentPage={currentPage} setCurrentPage={setCurrentPage}>Services</NavItem>
            <NavItem page="gallery" currentPage={currentPage} setCurrentPage={setCurrentPage}>Gallery</NavItem>
            <NavItem page="contact" currentPage={currentPage} setCurrentPage={setCurrentPage}>Contact Us</NavItem>
          </nav>
          {/* Mobile menu button */}
          <button className="md:hidden text-gray-600">
            <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16m-7 6h7" />
            </svg>
          </button>
        </div>
      </header>

      {/* Main Content Area */}
      <main className="flex-grow pt-16">
        {renderPage()}
      </main>

      {/* Live Chat and Get a Code Buttons */}
      <div className="fixed bottom-6 right-6 flex flex-col items-end space-y-4 z-40">
        <button
          onClick={() => setIsQuoteModalOpen(true)}
          className="flex items-center justify-center p-4 bg-indigo-600 text-white rounded-full shadow-lg hover:bg-indigo-700 transition duration-300 transform hover:scale-105"
          aria-label="Get a Quote"
        >
          <Quote size={24} />
        </button>

        <button
          onClick={() => setIsChatOpen(!isChatOpen)}
          className="flex items-center justify-center p-4 bg-white text-indigo-600 rounded-full shadow-lg hover:bg-gray-100 transition duration-300 transform hover:scale-105"
          aria-label="Toggle Live Chat"
        >
          <MessageCircle size={24} />
        </button>
      </div>

      {/* Live Chat UI */}
      {isChatOpen && <LiveChatBox onClose={() => setIsChatOpen(false)} />}
      
      {/* Quote Modal */}
      {isQuoteModalOpen && (
        <Modal onClose={() => setIsQuoteModalOpen(false)}>
          <div className="p-6 bg-white rounded-xl shadow-lg w-full max-w-md">
            <h3 className="text-xl font-semibold text-gray-800 mb-4">Get a Quote</h3>
            <p className="text-gray-600 mb-6">
              Thank you for your interest! Please contact us directly at <a href="mailto:tadriels24@gmail.com" className="text-indigo-600 hover:underline">tadriels24@gmail.com</a>
              or fill out the contact form on our Contact Us page to receive a personalized quote for your event.
            </p>
            <div className="flex justify-end">
              <button
                onClick={() => setIsQuoteModalOpen(false)}
                className="px-4 py-2 text-white bg-indigo-600 rounded-lg hover:bg-indigo-700 transition"
              >
                Close
              </button>
            </div>
          </div>
        </Modal>
      )}

      {/* Footer */}
      <footer className="bg-gray-900 text-white py-8">
        <div className="container mx-auto px-4 text-center">
          <p className="text-gray-400">&copy; 2024 Tadriels Event Planning & Rentals. All rights reserved.</p>
          <p className="text-sm mt-2">
            Email: <a href="mailto:tadriels24@gmail.com" className="text-indigo-400 hover:underline">tadriels24@gmail.com</a>
          </p>
        </div>
      </footer>
    </div>
  );
}

// Reusable Navigation Item component
const NavItem = ({ page, currentPage, setCurrentPage, children }) => (
  <button
    onClick={() => setCurrentPage(page)}
    className={`font-medium px-3 py-2 rounded-lg transition duration-200
      ${currentPage === page ? 'text-indigo-600 bg-gray-100' : 'text-gray-600 hover:text-indigo-600 hover:bg-gray-50'}`}
  >
    {children}
  </button>
);

// Modal Component
const Modal = ({ children, onClose }) => {
  useEffect(() => {
    const handleEscape = (e) => {
      if (e.key === 'Escape') {
        onClose();
      }
    };
    window.addEventListener('keydown', handleEscape);
    return () => window.removeEventListener('keydown', handleEscape);
  }, [onClose]);

  return (
    <div className="fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50 p-4" onClick={onClose}>
      <div onClick={(e) => e.stopPropagation()} className="relative">
        {children}
      </div>
    </div>
  );
};

// --- Home Page ---
const Home = () => {
  const videos = [
    'https://cdn.glitch.me/c7a7605d-1877-4475-b461-8b2111c1e089/video1.mp4',
    'https://cdn.glitch.me/c7a7605d-1877-4475-b461-8b2111c1e089/video2.mp4',
    'https://cdn.glitch.me/c7a7605d-1877-4475-b461-8b2111c1e089/video3.mp4',
  ];
  const carouselItems = [
    { type: 'image', src: 'https://placehold.co/1000x600/E0E7FF/5C6BC0?text=Event+Setup', alt: 'Event Setup' },
    { type: 'image', src: 'https://placehold.co/1000x600/C5CAE9/5C6BC0?text=Birthday+Party', alt: 'Fun birthday party' },
    { type: 'image', src: 'https://placehold.co/1000x600/9FA8DA/5C6BC0?text=Corporate+Gala', alt: 'Professional corporate event' },
    { type: 'image', src: 'https://placehold.co/1000x600/7986CB/5C6BC0?text=Wedding+Reception', alt: 'Beautiful wedding reception' },
    { type: 'image', src: 'https://placehold.co/1000x600/5C6BC0/FFFFFF?text=Rental+Equipment', alt: 'Rental equipment' },
  ];

  return (
    <div>
      {/* Dynamic Video Slider */}
      <VideoSlider videos={videos} />

      <section className="bg-white py-16 px-4">
        <div className="container mx-auto text-center">
          <h2 className="text-4xl font-extrabold text-gray-800 mb-4">Crafting Unforgettable Events</h2>
          <p className="text-lg text-gray-600 max-w-3xl mx-auto">
            At Tadriels, we believe every event tells a story. From intimate gatherings to grand celebrations, our team is dedicated to bringing your vision to life with flawless execution and stunning rentals.
          </p>
        </div>
      </section>

      {/* Photo and Video Carousel */}
      <section className="bg-white py-16 px-4">
        <div className="container mx-auto">
          <h2 className="text-4xl font-extrabold text-center text-gray-800 mb-12">Our Portfolio</h2>
          <Carousel items={carouselItems} />
        </div>
      </section>
    </div>
  );
};

// Video Slider Component
const VideoSlider = ({ videos }) => {
  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);

  const handleVideoEnded = () => {
    setCurrentVideoIndex((prevIndex) => (prevIndex + 1) % videos.length);
  };

  return (
    <div className="relative w-full h-screen overflow-hidden">
      {videos.map((video, index) => (
        <video
          key={index}
          src={video}
          autoPlay
          loop={false}
          muted
          playsInline
          onEnded={handleVideoEnded}
          className={`absolute top-0 left-0 w-full h-full object-cover transition-opacity duration-1000 ease-in-out
                      ${index === currentVideoIndex ? 'opacity-100' : 'opacity-0'}`}
        />
      ))}
      <div className="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 text-center">
        <div className="text-white">
          <h2 className="text-5xl md:text-7xl font-bold mb-4 animate-fade-in bg-clip-text text-transparent bg-gradient-to-r from-pink-400 to-purple-600">Your Dream Event Awaits</h2>
          <p className="text-lg md:text-xl font-light max-w-2xl mx-auto animate-fade-in-delay">
            Expert event planning and high-quality rentals for every occasion.
          </p>
        </div>
      </div>
    </div>
  );
};

// Carousel Component
const Carousel = ({ items }) => {
  const [currentIndex, setCurrentIndex] = useState(0);

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentIndex((prevIndex) => (prevIndex + 1) % items.length);
    }, 5000); // Auto-slides every 5 seconds
    return () => clearInterval(interval);
  }, [items.length]);

  const goToPrevious = () => {
    setCurrentIndex((prevIndex) => (prevIndex - 1 + items.length) % items.length);
  };

  const goToNext = () => {
    setCurrentIndex((prevIndex) => (prevIndex + 1) % items.length);
  };

  return (
    <div className="relative w-full h-[60vh] overflow-hidden rounded-xl shadow-lg">
      <div className="relative w-full h-full">
        {items.map((item, index) => (
          <div
            key={index}
            className={`absolute top-0 left-0 w-full h-full transition-opacity duration-700 ease-in-out
                      ${index === currentIndex ? 'opacity-100' : 'opacity-0'}`}
          >
            {item.type === 'image' && (
              <img src={item.src} alt={item.alt} className="w-full h-full object-cover" />
            )}
          </div>
        ))}
      </div>
      <button onClick={goToPrevious} className="absolute top-1/2 left-4 transform -translate-y-1/2 bg-white bg-opacity-50 hover:bg-opacity-75 text-gray-800 p-2 rounded-full transition-all duration-300">
        <ChevronLeft size={24} />
      </button>
      <button onClick={goToNext} className="absolute top-1/2 right-4 transform -translate-y-1/2 bg-white bg-opacity-50 hover:bg-opacity-75 text-gray-800 p-2 rounded-full transition-all duration-300">
        <ChevronRight size={24} />
      </button>
    </div>
  );
};

// --- About Us Page ---
const AboutUs = () => (
  <div className="container mx-auto px-4 py-20">
    <div className="bg-white p-8 rounded-xl shadow-lg">
      <h2 className="text-4xl font-bold text-center text-indigo-600 mb-6">About Tadriels Event Planning & Rentals</h2>
      <p className="text-lg text-gray-600 mb-4">
        Founded on a passion for creating memorable moments, Tadriels is a premier event planning and rental company dedicated to excellence. Our journey began with a simple idea: to make high-quality, seamless event experiences accessible to everyone. We're a team of creative and detail-oriented professionals who thrive on turning dreams into reality.
      </p>
      <p className="text-lg text-gray-600 mb-4">
        Our philosophy is centered on partnership. We work closely with our clients to understand their unique vision, personal style, and budget. Whether you're planning a corporate event, a wedding, a birthday party, or a small family gathering, we provide comprehensive services and a stunning inventory of rentals to ensure every detail is perfect.
      </p>
      <p className="text-lg text-gray-600">
        We believe that the magic is in the details, and we are committed to providing a stress-free planning process from start to finish. Let us take care of the logistics so you can focus on enjoying your special day.
      </p>
    </div>
  </div>
);

// --- Services Page ---
const servicesData = [
  {
    category: "Event Planning Packages",
    items: [
      "Full-Service Planning",
      "Partial Planning",
      "Day-of Coordination",
      "A La Carte Services",
      "Consultation & Budgeting",
      "Vendor Management",
      "Timeline Creation",
    ],
  },
  {
    category: "Decor & Design",
    items: [
      "Custom Backdrops",
      "Floral Arrangements",
      "Table Settings",
      "Centerpieces",
      "Lighting & AV",
      "Theme Development",
      "Stage & Tent Decor",
    ],
  },
  {
    category: "Furniture & Seating",
    items: [
      "Tables (Round, Banquet, Cocktail)",
      "Chairs (Chiavari, Folding, Ghost)",
      "Sofas & Lounge Furniture",
      "Bar & Stools",
      "High-Top Tables",
      "Kids' Furniture",
      "Specialty Seating",
    ],
  },
  {
    category: "Tent & Canopy Rentals",
    items: [
      "Frame Tents",
      "High-Peak Tents",
      "Canopies",
      "Tent Walls & Sidewalls",
      "Tent Flooring",
      "Heating & Cooling",
      "Custom Tent Lighting",
    ],
  },
  {
    category: "Tableware & Linens",
    items: [
      "Plate & Glassware",
      "Flatware & Cutlery",
      "Table Linens (Various fabrics)",
      "Napkins & Chargers",
      "Serving Dishes",
      "Coffee & Tea Service",
      "Specialty Linens",
    ],
  },
  {
    category: "Entertainment & Misc.",
    items: [
      "Audio Systems",
      "Projectors & Screens",
      "Photo Booths",
      "Event Games",
      "Mobile Bars",
      "Portable Dance Floors",
      "Generators & Power",
    ],
  },
];

const Services = () => (
  <div className="container mx-auto px-4 py-20">
    <div className="bg-white p-8 rounded-xl shadow-lg">
      <h2 className="text-4xl font-bold text-center text-indigo-600 mb-12">Our Services</h2>
      <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {servicesData.map((category, index) => (
          <div key={index} className="bg-gray-100 p-6 rounded-xl shadow-sm">
            <h3 className="text-2xl font-semibold text-gray-800 mb-4">{category.category}</h3>
            <ul className="space-y-2">
              {category.items.map((service, idx) => (
                <li key={idx} className="text-gray-600 list-disc ml-4">{service}</li>
              ))}
            </ul>
          </div>
        ))}
      </div>
    </div>
  </div>
);

// --- Gallery Page ---
const Gallery = () => {
  // Replace these placeholder URLs with your actual image URLs
  const galleryImages = [
    'http://googleusercontent.com/file_content/uploaded:D@10-019.jpg-2ed639b0-eb14-48a2-ba41-ce2d8953bfa8',
    'http://googleusercontent.com/file_content/uploaded:D@10-013.jpg-48a91020-585a-4806-ab2d-d6d86a6831ba',
    'http://googleusercontent.com/file_content/uploaded:D@10-001.jpg-90186200-1733-4433-b5bf-73fa95b30878',
    'http://googleusercontent.com/file_content/uploaded:D@10-007.jpg-17d31d19-0c21-43de-a8a5-df28574c3a20',
    'http://googleusercontent.com/file_content/uploaded:D@10-029.jpg-7974933c-f561-4865-8baf-662021be4d61',
    'http://googleusercontent.com/file_content/uploaded:IMG_8941.jpg-238764e4-59cb-4d6a-8476-0987a1d0027e',
  ];
  return (
    <div className="container mx-auto px-4 py-20">
      <div className="bg-white p-8 rounded-xl shadow-lg">
        <h2 className="text-4xl font-bold text-center text-indigo-600 mb-6">Event Gallery</h2>
        <div className="grid sm:grid-cols-2 md:grid-cols-3 gap-4">
          {galleryImages.map((src, index) => (
            <div key={index} className="overflow-hidden rounded-lg shadow-md">
              <img src={src} alt={`Event Gallery item ${index + 1}`} className="w-full h-64 object-cover transform hover:scale-105 transition-transform duration-300" />
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

// --- Contact Us Page ---
const ContactUs = () => (
  <div className="container mx-auto px-4 py-20">
    <div className="bg-white p-8 rounded-xl shadow-lg flex flex-col md:flex-row gap-8">
      <div className="md:w-1/2">
        <h2 className="text-4xl font-bold text-indigo-600 mb-6">Contact Us</h2>
        <p className="text-lg text-gray-600 mb-4">
          Ready to start planning your event? Reach out to us today and let's bring your vision to life.
        </p>
        <p className="text-gray-600 font-semibold">Email:</p>
        <a href="mailto:tadriels24@gmail.com" className="text-indigo-600 hover:underline">tadriels24@gmail.com</a>
        <p className="text-gray-600 mt-4 font-semibold">Phone:</p>
        <p className="text-gray-600">+1 365-384-0161</p>
      </div>
      <div className="md:w-1/2">
        <h3 className="text-2xl font-bold text-gray-800 mb-4">Send us a message</h3>
        <form className="space-y-4">
          <input type="text" placeholder="Your Name" className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500" />
          <input type="email" placeholder="Your Email" className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500" />
          <textarea placeholder="Your Message" rows="4" className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500"></textarea>
          <button type="submit" className="w-full px-6 py-3 bg-indigo-600 text-white font-semibold rounded-lg hover:bg-indigo-700 transition duration-300">
            Submit
          </button>
        </form>
      </div>
    </div>
  </div>
);

// Live Chat Box component
const LiveChatBox = ({ onClose }) => {
  const [messages, setMessages] = useState([
    { id: 1, sender: 'bot', text: 'Hello! How can I help you with your event today?' }
  ]);
  const [input, setInput] = useState('');

  const handleSendMessage = (e) => {
    e.preventDefault();
    if (input.trim() === '') return;
    const newMessage = { id: messages.length + 1, sender: 'user', text: input };
    setMessages([...messages, newMessage]);
    setInput('');
    // This is where you would typically send the message to a backend.
    // For this demonstration, we'll just simulate a bot response after a delay.
    setTimeout(() => {
      setMessages((prevMessages) => [
        ...prevMessages,
        { id: prevMessages.length + 1, sender: 'bot', text: "Thanks for your message! An agent will be with you shortly." }
      ]);
    }, 1500);
  };

  return (
    <div className="fixed bottom-24 right-6 w-80 h-96 bg-white rounded-xl shadow-2xl flex flex-col z-50 overflow-hidden">
      {/* Header */}
      <div className="bg-indigo-600 text-white p-4 flex justify-between items-center rounded-t-xl">
        <h3 className="text-lg font-semibold">Live Chat</h3>
        <button onClick={onClose} aria-label="Close chat" className="p-1 rounded-full hover:bg-indigo-700">
          <X size={20} />
        </button>
      </div>
      {/* Messages */}
      <div className="flex-grow p-4 space-y-4 overflow-y-auto">
        {messages.map((msg) => (
          <div key={msg.id} className={`flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}>
            <div className={`p-3 rounded-xl max-w-[75%] ${msg.sender === 'user' ? 'bg-indigo-100 text-gray-800' : 'bg-gray-200 text-gray-800'}`}>
              {msg.text}
            </div>
          </div>
        ))}
      </div>
      {/* Input Form */}
      <form onSubmit={handleSendMessage} className="p-4 bg-gray-50 border-t border-gray-200">
        <div className="flex items-center space-x-2">
          <input
            type="text"
            value={input}
            onChange={(e) => setInput(e.target.value)}
            placeholder="Type your message..."
            className="flex-grow p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500"
          />
          <button
            type="submit"
            className="p-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition"
            aria-label="Send message"
          >
            Send
          </button>
        </div>
      </form>
    </div>
  );
};


// Inject Tailwind CSS animations
const style = document.createElement('style');
style.innerHTML = `
  @keyframes fade-in {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }
  .animate-fade-in {
    animation: fade-in 1s ease-out;
  }
  .animate-fade-in-delay {
    animation: fade-in 1s ease-out 0.5s backwards;
  }
`;
document.head.appendChild(style);

export default App;


